#############################################################################
# Makefile for building: libISM2.so.1.26.0
# Generated by qmake (1.07a) (Qt 3.3.8b) on: Tue Dec 25 06:29:54 2012
# Project:  libISM.pro
# Template: lib
# Command: $(QMAKE) -o Makefile libISM.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -fno-strict-aliasing -fPIC  -DQT_NO_DEBUG -DQT_SHARED -DQT_TABLET_SUPPORT -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe -Wall -W  -fPIC -O3 -DQT_NO_DEBUG -DQT_SHARED -DQT_TABLET_SUPPORT -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib64/qt-3.3/mkspecs/default -I. -I. -I$(HOME)/code/include -I$(QTDIR)/include
LINK     = g++
LFLAGS   = -shared -Wl,-soname,libISM2.so.1
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -lqt-mt
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = occurrences.hh \
		segmentation.hh \
		recogui.hh \
		recoparams.hh \
		ism.hh
SOURCES = occurrences.cc \
		segmentation.cc \
		recogui.cc \
		recoparams.cc \
		ism.cc
OBJECTS = occurrences.o \
		segmentation.o \
		recogui.o \
		recoparams.o \
		ism.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = moc_recogui.cpp
OBJMOC = moc_recogui.o
DIST	   = libISM.pro
QMAKE_TARGET = ISM2
DESTDIR  = 
TARGET   = libISM2.so.1.26.0
TARGETA	= libISM2.a
TARGETD	= libISM2.so.1.26.0
TARGET0	= libISM2.so
TARGET1	= libISM2.so.1
TARGET2	= libISM2.so.1.26

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile  $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)



staticlib: $(TARGETA)

$(TARGETA):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(OBJCOMP)
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS) $(OBJMOC)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: libISM.pro  /usr/lib64/qt-3.3/mkspecs/default/qmake.conf /usr/lib64/qt-3.3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile libISM.pro
qmake: 
	@$(QMAKE) -o Makefile libISM.pro

dist: 
	@mkdir -p .tmp/ISM2 && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/ISM2/ && ( cd `dirname .tmp/ISM2` && $(TAR) ISM2.tar ISM2 && $(GZIP) ISM2.tar ) && $(MOVE) `dirname .tmp/ISM2`/ISM2.tar.gz . && $(DEL_FILE) -r .tmp/ISM2

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)
	-$(DEL_FILE) $(TARGET0) $(TARGET1) $(TARGET2) $(TARGETA)


FORCE:

####### Compile

occurrences.o: occurrences.cc occurrences.hh

segmentation.o: segmentation.cc segmentation.hh

recogui.o: recogui.cc recogui.hh

recoparams.o: recoparams.cc recoparams.hh \
		recogui.hh

ism.o: ism.cc occurrences.hh \
		ism.hh \
		recoparams.hh \
		segmentation.hh \
		recogui.hh

moc_recogui.o: moc_recogui.cpp  recogui.hh 

moc_recogui.cpp: $(MOC) recogui.hh
	$(MOC) recogui.hh -o moc_recogui.cpp

####### Install

install_target: all 
	@$(CHK_DIR_EXISTS) "$(INSTALL_ROOT)$(HOME)/code/lib/i686/" || $(MKDIR) "$(INSTALL_ROOT)$(HOME)/code/lib/i686/"
	-$(INSTALL_FILE) "$(TARGET)" "$(INSTALL_ROOT)$(HOME)/code/lib/i686/$(TARGET)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)$(HOME)/code/lib/i686/$(TARGET0)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)$(HOME)/code/lib/i686/$(TARGET1)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)$(HOME)/code/lib/i686/$(TARGET2)"

uninstall_target: 
	-$(DEL_FILE) "$(INSTALL_ROOT)$(HOME)/code/lib/i686/$(TARGET)"
	-$(DEL_FILE) "$(INSTALL_ROOT)$(HOME)/code/lib/i686/$(TARGET0)"
	-$(DEL_FILE) "$(INSTALL_ROOT)$(HOME)/code/lib/i686/$(TARGET1)"
	-$(DEL_FILE) "$(INSTALL_ROOT)$(HOME)/code/lib/i686/$(TARGET2)"
	-$(DEL_DIR) "$(INSTALL_ROOT)$(HOME)/code/lib/i686/"


install_headers: all 
	@$(CHK_DIR_EXISTS) "$(INSTALL_ROOT)$(HOME)/code/include/" || $(MKDIR) "$(INSTALL_ROOT)$(HOME)/code/include/"
	-$(INSTALL_FILE) "occurrences.hh" "$(INSTALL_ROOT)$(HOME)/code/include/"
	-$(INSTALL_FILE) "segmentation.hh" "$(INSTALL_ROOT)$(HOME)/code/include/"
	-$(INSTALL_FILE) "recogui.hh" "$(INSTALL_ROOT)$(HOME)/code/include/"
	-$(INSTALL_FILE) "recoparams.hh" "$(INSTALL_ROOT)$(HOME)/code/include/"
	-$(INSTALL_FILE) "ism.hh" "$(INSTALL_ROOT)$(HOME)/code/include/"


uninstall_headers: 
	-$(DEL_FILE) -r "$(INSTALL_ROOT)$(HOME)/code/include/occurrences.hh"
	-$(DEL_FILE) -r "$(INSTALL_ROOT)$(HOME)/code/include/segmentation.hh"
	-$(DEL_FILE) -r "$(INSTALL_ROOT)$(HOME)/code/include/recogui.hh"
	-$(DEL_FILE) -r "$(INSTALL_ROOT)$(HOME)/code/include/recoparams.hh"
	-$(DEL_FILE) -r "$(INSTALL_ROOT)$(HOME)/code/include/ism.hh"
	-$(DEL_DIR) "$(INSTALL_ROOT)$(HOME)/code/include/"


install: install_target install_headers  

uninstall: uninstall_target uninstall_headers  

