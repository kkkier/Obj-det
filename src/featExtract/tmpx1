			// Store the supporting patches' information to the file(only those above the threshold)
			// The stored information includes:
			// 		Patch's position
			// 		The leaf nodes' voting offset(of all the random trees)
			
			// The patch's position
			fsSupportingVoteFile<< "Patch"
								<<endl;
			PatchSample psPatch = m_prfRandomForest->getPatchSample(litr->m_nPatchIndex);
			fsSupportingVoteFile<<psPatch.fvOffset.x
								<<","
								<< psPatch.fvOffset.y
								<<endl;
			fsSupportingVoteFile<<"Offset"<<endl;
			// All the offset coordinates of the current patch
			for(int i = 0; i < litr->m_vnLeafNodes.size(); i++)
			{
				RandomNode node = m_prfRandomForest->getNode(i,litr->m_vnLeafNodes[i]);
				for(int j=0; j<node.m_vCoords[nClass].size();j++)
				{
					fsSupportingVoteFile 	<< node.m_vCoords[nClass][j].at(0)
											<< ","
											<< node.m_vCoords[nClass][j].at(1)
											<<endl;
				}
			}
