#############################################################################
# Makefile for building: libDetector2.so.1.7.1
# Generated by qmake (1.07a) (Qt 3.3.8b) on: Tue Dec 25 06:30:00 2012
# Project:  libDetector.pro
# Template: lib
# Command: $(QMAKE) -o Makefile libDetector.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -fno-strict-aliasing -fPIC  -DQT_NO_DEBUG -DQT_SHARED -DQT_TABLET_SUPPORT -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe -Wall -W -O3 -fPIC  -DQT_NO_DEBUG -DQT_SHARED -DQT_TABLET_SUPPORT -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib64/qt-3.3/mkspecs/default -I. -I. -I$(HOME)/code/include -I$(QTDIR)/include
LINK     = g++
LFLAGS   = -shared -Wl,-soname,libDetector2.so.1
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -lqt-mt
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = detector.hh \
		detectorgui.hh \
		detectorwidget.hh \
		cuewidget.hh
SOURCES = detector-fileio.cc \
		detector.cc \
		detectorgui.cc \
		detectorwidget.cc \
		cuewidget.cc
OBJECTS = detector-fileio.o \
		detector.o \
		detectorgui.o \
		detectorwidget.o \
		cuewidget.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = moc_detector.cpp \
		moc_detectorgui.cpp \
		moc_detectorwidget.cpp \
		moc_cuewidget.cpp
OBJMOC = moc_detector.o \
		moc_detectorgui.o \
		moc_detectorwidget.o \
		moc_cuewidget.o
DIST	   = libDetector.pro
QMAKE_TARGET = Detector2
DESTDIR  = 
TARGET   = libDetector2.so.1.7.1
TARGETA	= libDetector2.a
TARGETD	= libDetector2.so.1.7.1
TARGET0	= libDetector2.so
TARGET1	= libDetector2.so.1
TARGET2	= libDetector2.so.1.7

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile  $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)



staticlib: $(TARGETA)

$(TARGETA):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(OBJCOMP)
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS) $(OBJMOC)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: libDetector.pro  /usr/lib64/qt-3.3/mkspecs/default/qmake.conf /usr/lib64/qt-3.3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile libDetector.pro
qmake: 
	@$(QMAKE) -o Makefile libDetector.pro

dist: 
	@mkdir -p .tmp/Detector2 && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/Detector2/ && ( cd `dirname .tmp/Detector2` && $(TAR) Detector2.tar Detector2 && $(GZIP) Detector2.tar ) && $(MOVE) `dirname .tmp/Detector2`/Detector2.tar.gz . && $(DEL_FILE) -r .tmp/Detector2

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)
	-$(DEL_FILE) $(TARGET0) $(TARGET1) $(TARGET2) $(TARGETA)


FORCE:

####### Compile

detector-fileio.o: detector-fileio.cc detector.hh \
		cuewidget.hh \
		detectorgui.hh

detector.o: detector.cc detector.hh \
		cuewidget.hh \
		detectorgui.hh

detectorgui.o: detectorgui.cc detectorgui.hh \
		cuewidget.hh

detectorwidget.o: detectorwidget.cc detectorwidget.hh \
		detectorgui.hh \
		cuewidget.hh

cuewidget.o: cuewidget.cc cuewidget.hh

moc_detector.o: moc_detector.cpp  detector.hh cuewidget.hh \
		detectorgui.hh

moc_detectorgui.o: moc_detectorgui.cpp  detectorgui.hh cuewidget.hh

moc_detectorwidget.o: moc_detectorwidget.cpp  detectorwidget.hh detectorgui.hh \
		cuewidget.hh

moc_cuewidget.o: moc_cuewidget.cpp  cuewidget.hh 

moc_detector.cpp: $(MOC) detector.hh
	$(MOC) detector.hh -o moc_detector.cpp

moc_detectorgui.cpp: $(MOC) detectorgui.hh
	$(MOC) detectorgui.hh -o moc_detectorgui.cpp

moc_detectorwidget.cpp: $(MOC) detectorwidget.hh
	$(MOC) detectorwidget.hh -o moc_detectorwidget.cpp

moc_cuewidget.cpp: $(MOC) cuewidget.hh
	$(MOC) cuewidget.hh -o moc_cuewidget.cpp

####### Install

install_target: all 
	@$(CHK_DIR_EXISTS) "$(INSTALL_ROOT)$(HOME)/code/lib/i686/" || $(MKDIR) "$(INSTALL_ROOT)$(HOME)/code/lib/i686/"
	-$(INSTALL_FILE) "$(TARGET)" "$(INSTALL_ROOT)$(HOME)/code/lib/i686/$(TARGET)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)$(HOME)/code/lib/i686/$(TARGET0)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)$(HOME)/code/lib/i686/$(TARGET1)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)$(HOME)/code/lib/i686/$(TARGET2)"

uninstall_target: 
	-$(DEL_FILE) "$(INSTALL_ROOT)$(HOME)/code/lib/i686/$(TARGET)"
	-$(DEL_FILE) "$(INSTALL_ROOT)$(HOME)/code/lib/i686/$(TARGET0)"
	-$(DEL_FILE) "$(INSTALL_ROOT)$(HOME)/code/lib/i686/$(TARGET1)"
	-$(DEL_FILE) "$(INSTALL_ROOT)$(HOME)/code/lib/i686/$(TARGET2)"
	-$(DEL_DIR) "$(INSTALL_ROOT)$(HOME)/code/lib/i686/"


install_headers: all 
	@$(CHK_DIR_EXISTS) "$(INSTALL_ROOT)$(HOME)/code/include/" || $(MKDIR) "$(INSTALL_ROOT)$(HOME)/code/include/"
	-$(INSTALL_FILE) "detector.hh" "$(INSTALL_ROOT)$(HOME)/code/include/"
	-$(INSTALL_FILE) "detectorgui.hh" "$(INSTALL_ROOT)$(HOME)/code/include/"
	-$(INSTALL_FILE) "detectorwidget.hh" "$(INSTALL_ROOT)$(HOME)/code/include/"
	-$(INSTALL_FILE) "cuewidget.hh" "$(INSTALL_ROOT)$(HOME)/code/include/"


uninstall_headers: 
	-$(DEL_FILE) -r "$(INSTALL_ROOT)$(HOME)/code/include/detector.hh"
	-$(DEL_FILE) -r "$(INSTALL_ROOT)$(HOME)/code/include/detectorgui.hh"
	-$(DEL_FILE) -r "$(INSTALL_ROOT)$(HOME)/code/include/detectorwidget.hh"
	-$(DEL_FILE) -r "$(INSTALL_ROOT)$(HOME)/code/include/cuewidget.hh"
	-$(DEL_DIR) "$(INSTALL_ROOT)$(HOME)/code/include/"


install: install_target install_headers  

uninstall: uninstall_target uninstall_headers  

